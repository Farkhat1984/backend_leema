# Production Docker Compose Configuration
# Use this for production deployment (no code mounting, no hot-reload)

services:
  postgres:
    image: postgres:16-alpine
    container_name: fashion_postgres_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fashionuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Ckdshfh231161}
      POSTGRES_DB: ${POSTGRES_DB:-fashion_platform}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fashionuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: .
    container_name: fashion_backend_prod
    env_file:
      - .env
    volumes:
      # Only mount uploads directory in production
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
      "

volumes:
  postgres_data_prod:
    driver: local
