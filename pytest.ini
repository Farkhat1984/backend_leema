[pytest]
# Pytest configuration for comprehensive API testing

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    asyncio: mark test as async
    integration: mark test as integration test
    unit: mark test as unit test
    slow: mark test as slow running
    auth: authentication tests
    payments: payment-related tests
    generations: AI generation tests
    admin: admin-only tests
    shop: shop-related tests
    user: user-related tests
    product: product-related tests

# Test output options
addopts =
    -v
    --strict-markers
    --tb=short
    --disable-warnings
    --color=yes
    --durations=10
    --cov=app
    --cov-report=html
    --cov-report=term-missing
    --maxfail=5

# Asyncio configuration
asyncio_mode = auto

# Coverage options
[coverage:run]
source = app
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
